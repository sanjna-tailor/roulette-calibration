export = SourceInfo;
/** @typedef {import(".").SourceInfoPlain} SourceInfoPlain */
/** @typedef {import(".").SourceInfoLike} SourceInfoLike */
/**
 * Strem Source information
 * @namespace
 */
declare class SourceInfo {
    /**
     * @constructor
     * @alias SourceInfo
     * @param {Number} ssrc
     */
    constructor(ssrc: number);
    ssrc: number;
    /**
     * Create a clone of this source info object
     * @returns {SourceInfo}
     */
    clone(): SourceInfo;
    /**
     * Return a plain javascript object which can be converted to JSON
     * @returns {SourceInfoPlain} Plain javascript object
     */
    plain(): SourceInfoPlain;
    /**
     * Get source CName
     * @returns {String}
     */
    getCName(): string;
    /**
     * Set source CName
     * @param {String} cname
     */
    setCName(cname: string): void;
    cname: string;
    /**
     * Get associated stream id
     * @returns {String}
     */
    getStreamId(): string;
    /**
     * Set associated stream id for this ssrc
     * @param {String} streamId
     */
    setStreamId(streamId: string): void;
    streamId: string;
    /**
     * Get associated track id
     * @returns {String}
     */
    getTrackId(): string;
    /**
     * Set associated track id for this ssrc
     * @param {String} trackId
     */
    setTrackId(trackId: string): void;
    trackId: string;
    /**
     * Get ssrc from source
     * @returns {Number}
     */
    getSSRC(): number;
}
declare namespace SourceInfo {
    export { expand, clone, SourceInfoPlain, SourceInfoLike };
}
type SourceInfoPlain = import(".").SourceInfoPlain;
/**
 * Expands a plain JSON object containing an SourceInfo
 * @param {SourceInfoLike} plain JSON object
 * @returns {SourceInfo} Parsed Source info
 */
declare function expand(plain: SourceInfoLike): SourceInfo;
/**
 * Expands a plain JSON object containing an SourceInfo or a SourceInfo and clone it
 * @param {SourceInfoLike} plain JSON object or SourceInfo
 * @returns {SourceInfo} Cloned SourceInfo
 */
declare function clone(plain: SourceInfoLike): SourceInfo;
type SourceInfoLike = import(".").SourceInfoLike;
//# sourceMappingURL=SourceInfo.d.ts.map
export = ICEInfo;
/** @typedef {import(".").ICEInfoPlain} ICEInfoPlain */
/** @typedef {import(".").ICEInfoLike} ICEInfoLike */
/**
 * ICE information for a peer
 * @namespace
 */
declare class ICEInfo {
    /**
     * @constructor
     * @alias ICEInfo
     * @param {String} ufrag	- Peer ICE username framgent
     * @param {String} pwd		- Peer ICE password
     */
    constructor(ufrag: string, pwd: string);
    ufrag: string;
    pwd: string;
    lite: boolean;
    endOfCandidates: boolean;
    /**
     * Create a clone of this Codec info object
     * @returns {ICEInfo}
     */
    clone(): ICEInfo;
    /**
     * Return a plain javascript object which can be converted to JSON
     * @returns {ICEInfoPlain} Plain javascript object
     */
    plain(): ICEInfoPlain;
    /**
     * Get username fragment
     * @returns {String} ufrag
     */
    getUfrag(): string;
    /**
     * Get username password
     * @returns {String}	password
     */
    getPwd(): string;
    /**
     * Is peer ICE lite
     * @returns {Boolean}
     */
    isLite(): boolean;
    /**
     * Set peer as ICE lite
     * @param {boolean} lite
     */
    setLite(lite: boolean): void;
    isEndOfCandidates(): boolean;
    /**
     * @param {Boolean} endOfCandidates
     */
    setEndOfCandidates(endOfCandidates: boolean): void;
}
declare namespace ICEInfo {
    export { generate, expand, clone, ICEInfoPlain, ICEInfoLike };
}
type ICEInfoPlain = import(".").ICEInfoPlain;
/**
 * Genereate a new peer ICE info with ramdom values
 * @param {Boolean} lite - Set ICE lite flag
 * @returns {ICEInfo}
 */
declare function generate(lite: boolean): ICEInfo;
/**
 * Expands a plain JSON object containing an ICEInfo
 * @param {ICEInfoLike} plain JSON object
 * @returns {ICEInfo} Parsed ICE info
 */
declare function expand(plain: ICEInfoLike): ICEInfo;
/**
 * Expands a plain JSON object containing an ICEInfo or a ICEInfo and clone it
 * @param {ICEInfoLike} plain JSON object or ICEInfo
 * @returns {ICEInfo} Cloned ICEInfo
 */
declare function clone(plain: ICEInfoLike): ICEInfo;
type ICEInfoLike = import(".").ICEInfoLike;
//# sourceMappingURL=ICEInfo.d.ts.map
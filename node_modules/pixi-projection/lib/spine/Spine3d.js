'use strict';

var graphics = require('@pixi/graphics');
require('@pixi/math');
require('../proj3d/Matrix3d.js');
require('../base/index.js');
var Container3d = require('../proj3d/Container3d.js');
require('../proj3d/sprites/convert.js');
var Sprite3d = require('../proj3d/sprites/Sprite3d.js');
require('../proj3d/sprites/Text3d.js');
var Mesh3d2d = require('../proj3d/mesh/Mesh3d2d.js');

function applySpine3dMixin(spineClassPrototype) {
  spineClassPrototype.newMesh = function newMesh(texture, vertices, uvs, indices, drawMode) {
    return new Mesh3d2d.SimpleMesh3d2d(texture, vertices, uvs, indices, drawMode);
  };
  spineClassPrototype.newContainer = function newMesh() {
    if (!this.proj) {
      this.convertTo3d();
    }
    return new Container3d.Container3d();
  };
  spineClassPrototype.newSprite = function newSprite(texture) {
    return new Sprite3d.Sprite3d(texture);
  };
  spineClassPrototype.newGraphics = function newMesh() {
    const graphics$1 = new graphics.Graphics();
    graphics$1.convertTo3d();
    return graphics$1;
  };
  spineClassPrototype.transformHack = function transformHack() {
    return 2;
  };
}

exports.applySpine3dMixin = applySpine3dMixin;
//# sourceMappingURL=Spine3d.js.map

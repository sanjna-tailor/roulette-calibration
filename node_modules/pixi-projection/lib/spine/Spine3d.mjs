import { Graphics } from '@pixi/graphics';
import '@pixi/math';
import '../proj3d/Matrix3d.mjs';
import '../base/index.mjs';
import { Container3d } from '../proj3d/Container3d.mjs';
import '../proj3d/sprites/convert.mjs';
import { Sprite3d } from '../proj3d/sprites/Sprite3d.mjs';
import '../proj3d/sprites/Text3d.mjs';
import { SimpleMesh3d2d } from '../proj3d/mesh/Mesh3d2d.mjs';

function applySpine3dMixin(spineClassPrototype) {
  spineClassPrototype.newMesh = function newMesh(texture, vertices, uvs, indices, drawMode) {
    return new SimpleMesh3d2d(texture, vertices, uvs, indices, drawMode);
  };
  spineClassPrototype.newContainer = function newMesh() {
    if (!this.proj) {
      this.convertTo3d();
    }
    return new Container3d();
  };
  spineClassPrototype.newSprite = function newSprite(texture) {
    return new Sprite3d(texture);
  };
  spineClassPrototype.newGraphics = function newMesh() {
    const graphics = new Graphics();
    graphics.convertTo3d();
    return graphics;
  };
  spineClassPrototype.transformHack = function transformHack() {
    return 2;
  };
}

export { applySpine3dMixin };
//# sourceMappingURL=Spine3d.mjs.map

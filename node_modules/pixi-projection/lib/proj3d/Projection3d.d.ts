import { LinearProjection } from '../base';
import { ObservablePoint3d } from './Point3d';
import { Matrix, Transform } from '@pixi/math';
import { Matrix3d } from './Matrix3d';
import { ObservableEuler } from './ObservableEuler';
export declare class Projection3d extends LinearProjection<Matrix3d> {
    constructor(legacy: Transform, enable?: boolean);
    cameraMatrix: Matrix3d;
    _cameraMode: boolean;
    get cameraMode(): boolean;
    set cameraMode(value: boolean);
    position: ObservablePoint3d;
    scale: ObservablePoint3d;
    euler: ObservableEuler;
    pivot: ObservablePoint3d;
    onChange(): void;
    clear(): void;
    updateLocalTransform(lt: Matrix): void;
}

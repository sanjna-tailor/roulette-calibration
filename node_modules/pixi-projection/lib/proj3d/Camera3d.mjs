import { Container3d } from './Container3d.mjs';

class Camera3d extends Container3d {
  constructor() {
    super();
    this._far = 0;
    this._near = 0;
    this._focus = 0;
    this._orthographic = false;
    this.proj.cameraMode = true;
    this.setPlanes(400, 10, 1e4, false);
  }
  get far() {
    return this._far;
  }
  get near() {
    return this._near;
  }
  get focus() {
    return this._focus;
  }
  get ortographic() {
    return this._orthographic;
  }
  setPlanes(focus, near = 10, far = 1e4, orthographic = false) {
    this._focus = focus;
    this._near = near;
    this._far = far;
    this._orthographic = orthographic;
    const proj = this.proj;
    const mat4 = proj.cameraMatrix.mat4;
    proj._projID++;
    mat4[10] = 1 / (far - near);
    mat4[14] = (focus - near) / (far - near);
    if (this._orthographic) {
      mat4[11] = 0;
    } else {
      mat4[11] = 1 / focus;
    }
  }
}

export { Camera3d };
//# sourceMappingURL=Camera3d.mjs.map

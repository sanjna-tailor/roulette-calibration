import { Euler } from './Euler';
export type IEuler = Euler | ObservableEuler;
export declare class ObservableEuler {
    cb: any;
    scope: any;
    constructor(cb: any, scope: any, x?: number, y?: number, z?: number);
    _quatUpdateId: number;
    _quatDirtyId: number;
    quaternion: Float64Array;
    _x: number;
    _y: number;
    _z: number;
    _sign: number;
    get x(): number;
    set x(value: number);
    get y(): number;
    set y(value: number);
    get z(): number;
    set z(value: number);
    get pitch(): number;
    set pitch(value: number);
    get yaw(): number;
    set yaw(value: number);
    get roll(): number;
    set roll(value: number);
    set(x?: number, y?: number, z?: number): this;
    copyFrom(euler: IEuler): this;
    copyTo(p: IEuler): IEuler;
    equals(euler: IEuler): boolean;
    clone(): Euler;
    update(): boolean;
}

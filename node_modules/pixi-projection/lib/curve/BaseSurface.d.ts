import { IPointData, Matrix } from '@pixi/math';
import { IWorldTransform } from './ProjectionSurface';
import { Dict } from '@pixi/utils';
export declare abstract class Surface implements IWorldTransform {
    surfaceID: string;
    _updateID: number;
    vertexSrc: string;
    fragmentSrc: string;
    fillUniforms(uniforms: Dict<any>): void;
    clear(): void;
    boundsQuad(v: ArrayLike<number>, out: any, after?: Matrix): void;
    abstract apply(pos: IPointData, newPos: IPointData): IPointData;
    abstract applyInverse(pos: IPointData, newPos: IPointData): IPointData;
}

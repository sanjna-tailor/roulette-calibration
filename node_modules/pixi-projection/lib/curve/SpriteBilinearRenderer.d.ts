import { Buffer, ExtensionType, Geometry, Renderer, ViewableBuffer } from '@pixi/core';
import { Sprite } from '@pixi/sprite';
import { Matrix } from '@pixi/math';
import { UniformBatchRenderer } from '../base';
export declare class BatchBilinearGeometry extends Geometry {
    _buffer: Buffer;
    _indexBuffer: Buffer;
    constructor(_static?: boolean);
}
export declare class BatchBilinearRenderer extends UniformBatchRenderer {
    constructor(renderer: Renderer);
    static extension: {
        name: string;
        type: ExtensionType;
    };
    setShaderGenerator(): void;
    defUniforms: {
        translationMatrix: Matrix;
        distortion: Float32Array;
    };
    size: number;
    forceMaxTextures: number;
    getUniforms(sprite: Sprite): any;
    packInterleavedGeometry(element: any, attributeBuffer: ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number): void;
}

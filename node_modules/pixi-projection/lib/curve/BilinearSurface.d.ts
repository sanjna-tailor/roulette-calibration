import { IPoint, IPointData, Point, Rectangle, Transform } from '@pixi/math';
import { Sprite } from '@pixi/sprite';
import { Surface } from './BaseSurface';
import { Dict } from '@pixi/utils';
export declare class BilinearSurface extends Surface {
    distortion: Point;
    clear(): void;
    apply(pos: IPointData, newPos?: IPointData): IPointData;
    applyInverse(pos: IPointData, newPos: IPoint): IPointData;
    mapSprite(sprite: Sprite, quad: Array<IPointData>, outTransform?: Transform): this;
    mapQuad(rect: Rectangle, quad: Array<IPointData>, outTransform: Transform): this;
    fillUniforms(uniforms: Dict<any>): void;
}

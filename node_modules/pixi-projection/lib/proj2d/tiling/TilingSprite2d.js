'use strict';

var math = require('@pixi/math');
var Projection2d = require('../Projection2d.js');
require('../../base/index.js');
var Container2d = require('../Container2d.js');
var spriteTiling = require('@pixi/sprite-tiling');
var AbstractProjection = require('../../base/AbstractProjection.js');

const tempTransform = new math.Transform();
class TilingSprite2d extends spriteTiling.TilingSprite {
  constructor(texture, width, height) {
    super(texture, width, height);
    this.tileProj = new Projection2d.Projection2d(this.tileTransform);
    this.tileProj.reverseLocalOrder = true;
    this.proj = new Projection2d.Projection2d(this.transform);
    this.pluginName = "tilingSprite2d";
    this.uvRespectAnchor = true;
  }
  get worldTransform() {
    return this.proj.affine ? this.transform.worldTransform : this.proj.world;
  }
  toLocal(position, from, point, skipUpdate, step = AbstractProjection.TRANSFORM_STEP.ALL) {
    return Container2d.container2dToLocal.call(this, position, from, point, skipUpdate, step);
  }
  _render(renderer) {
    const texture = this._texture;
    if (!texture || !texture.valid) {
      return;
    }
    this.tileTransform.updateTransform(tempTransform);
    this.uvMatrix.update();
    renderer.batch.setObjectRenderer(renderer.plugins[this.pluginName]);
    renderer.plugins[this.pluginName].render(this);
  }
}

exports.TilingSprite2d = TilingSprite2d;
//# sourceMappingURL=TilingSprite2d.js.map

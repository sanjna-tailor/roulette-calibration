'use strict';

var core = require('@pixi/core');
var SpriteMaskFilter = require('./SpriteMaskFilter.js');

const oldPushSpriteMask = core.MaskSystem.prototype.pushSpriteMask;
function pushSpriteMaskOverride(maskData) {
  const { maskObject } = maskData;
  const origFilter = maskData._filters;
  if (!origFilter) {
    let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];
    if (!alphaMaskFilter) {
      alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter.SpriteMaskFilter2d(maskObject)];
    }
    maskData._filters = alphaMaskFilter;
  }
  oldPushSpriteMask.call(this, maskData);
  if (!origFilter) {
    maskData._filters = null;
  }
}
function patchSpriteMask() {
  core.MaskSystem.prototype.pushSpriteMask = pushSpriteMaskOverride;
}

exports.patchSpriteMask = patchSpriteMask;
//# sourceMappingURL=MaskHacker.js.map

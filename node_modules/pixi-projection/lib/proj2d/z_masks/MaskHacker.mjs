import { MaskSystem } from '@pixi/core';
import { SpriteMaskFilter2d } from './SpriteMaskFilter.mjs';

const oldPushSpriteMask = MaskSystem.prototype.pushSpriteMask;
function pushSpriteMaskOverride(maskData) {
  const { maskObject } = maskData;
  const origFilter = maskData._filters;
  if (!origFilter) {
    let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];
    if (!alphaMaskFilter) {
      alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter2d(maskObject)];
    }
    maskData._filters = alphaMaskFilter;
  }
  oldPushSpriteMask.call(this, maskData);
  if (!origFilter) {
    maskData._filters = null;
  }
}
function patchSpriteMask() {
  MaskSystem.prototype.pushSpriteMask = pushSpriteMaskOverride;
}

export { patchSpriteMask };
//# sourceMappingURL=MaskHacker.mjs.map

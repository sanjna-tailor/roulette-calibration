{"version":3,"file":"convert.js","sources":["../../../src/proj2d/sprites/convert.ts"],"sourcesContent":["import { Projection2d } from '../Projection2d';\r\nimport { Container2d, container2dWorldTransform } from '../Container2d';\r\nimport { TilingSprite } from '@pixi/sprite-tiling';\r\nimport { Program } from '@pixi/core';\r\nimport { MeshMaterial } from '@pixi/mesh';\r\nimport { Mesh2d } from '../mesh/Mesh2d';\r\nimport { SimpleMesh, SimpleRope } from '@pixi/mesh-extras';\r\nimport { Container } from '@pixi/display';\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { Sprite2d } from './Sprite2d';\r\nimport { TilingSprite2d } from '../tiling/TilingSprite2d';\r\n\r\nfunction convertTo2d()\r\n{\r\n    if (this.proj) return;\r\n    this.proj = new Projection2d(this.transform);\r\n    this.toLocal = Container2d.prototype.toLocal;\r\n    Object.defineProperty(this, 'worldTransform', {\r\n        get: container2dWorldTransform,\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\r\n\r\nContainer.prototype.convertTo2d = convertTo2d;\r\n\r\nSprite.prototype.convertTo2d = function spriteConvertTo2d()\r\n{\r\n    if (this.proj) return;\r\n    this.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n    this.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n    this._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n    this.pluginName = 'batch2d';\r\n    convertTo2d.call(this);\r\n};\r\n\r\nContainer.prototype.convertSubtreeTo2d = function convertSubtreeTo2d()\r\n{\r\n    this.convertTo2d();\r\n    for (let i = 0; i < this.children.length; i++)\r\n    {\r\n        this.children[i].convertSubtreeTo2d();\r\n    }\r\n};\r\n\r\nSimpleMesh.prototype.convertTo2d\r\n    = SimpleRope.prototype.convertTo2d\r\n        = function meshConvertTo2d()\r\n        {\r\n            if (this.proj) return;\r\n            this.calculateVertices = Mesh2d.prototype.calculateVertices;\r\n            this._renderDefault = Mesh2d.prototype._renderDefault;\r\n            if (this.material.pluginName !== 'batch2d')\r\n            {\r\n                this.material = new MeshMaterial(this.material.texture, {\r\n                    program: Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\r\n                    pluginName: 'batch2d'\r\n                });\r\n            }\r\n            convertTo2d.call(this);\r\n        };\r\n\r\nTilingSprite.prototype.convertTo2d = function tilingConvertTo2d()\r\n{\r\n    if (this.proj) return;\r\n\r\n    this.tileProj = new Projection2d(this.tileTransform);\r\n    this.tileProj.reverseLocalOrder = true;\r\n    this.uvRespectAnchor = true;\r\n\r\n    this.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n    this._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n    this._render = TilingSprite2d.prototype._render;\r\n\r\n    this.pluginName = 'tilingSprite2d';\r\n    convertTo2d.call(this);\r\n};\r\n"],"names":["Projection2d","Container2d","container2dWorldTransform","Container","Sprite","Sprite2d","SimpleMesh","SimpleRope","Mesh2d","MeshMaterial","Program","TilingSprite","TilingSprite2d"],"mappings":"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"}
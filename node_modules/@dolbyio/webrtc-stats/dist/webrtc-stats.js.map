{"version":3,"file":"webrtc-stats.js","mappings":"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","sources":["webpack://WebRTCStats/webpack/universalModuleDefinition","webpack://WebRTCStats/./node_modules/events/events.js","webpack://WebRTCStats/./node_modules/js-logger/src/logger.js","webpack://WebRTCStats/./src/index.ts","webpack://WebRTCStats/./src/types/WebRTCStats.ts","webpack://WebRTCStats/./src/utils.ts","webpack://WebRTCStats/./src/webRTCStats.ts","webpack://WebRTCStats/webpack/bootstrap","webpack://WebRTCStats/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebRTCStats\"] = factory();\n\telse\n\t\troot[\"WebRTCStats\"] = factory();\n})(self, () => {\nreturn ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Createa an alias to useDefaults to avoid reaking a react-hooks rule.\r\n\tLogger.setDefaults = Logger.useDefaults;\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n","// Expose the logger to control when/where to log\nexport { default as Logger } from 'js-logger';\n\nexport * from './webRTCStats';\nexport * from './types/options';\nexport * from './types/WebRTCStats';\nexport * from './types/webRTCStatsEvents';\n","import { WebRTCStatsOptions } from './options';\n\n/**\n * Represents the base of the statistics object.\n */\nexport interface StatsBase {\n    /** A unique id that is associated with the object that was inspected to produce this {@link StatsBase} object. */\n    id: string;\n    /** The timestamp, associated with this object. The time is relative to the UNIX epoch (Jan 1, 1970, UTC). */\n    timestamp: number;\n    /** Media stream \"identification-tag\" negotiated and present in the local and remote descriptions. */\n    mid?: string;\n    /** Current bitrate in bytes per second. */\n    bitrate?: number;\n    /** Current packet rate in packets per second. */\n    packetRate?: number;\n}\n\n/**\n * Represents the MIME type of the codec.\n */\nexport interface StatsCodec {\n    /** The codec MIME media type/subtype. e.g., video/vp8 or equivalent. */\n    mimeType?: string;\n}\n\n/**\n * The enum representing a reason for limiting the resolution and/or framerate, or `none` if not limited.\n *\n * @see [RTCQualityLimitationReason](https://w3c.github.io/webrtc-stats/#rtcqualitylimitationreason-enum)\n */\nexport enum QualityLimitationReason {\n    /** The resolution and/or framerate is not limited. */\n    'none',\n    /** The resolution and/or framerate is primarily limited due to CPU load. */\n    'cpu',\n    /**\n     * The resolution and/or framerate is primarily limited due to congestion cues during bandwidth estimation.\n     * Typical, congestion control algorithms use inter-arrival time,\n     * round-trip time, packet or other congestion cues to perform bandwidth estimation.\n     */\n    'bandwidth',\n    /** The resolution and/or framerate is primarily limited for a reason other than the above. */\n    'other',\n}\n\n/**\n * Represents the base statistics object for an output stream.\n */\nexport interface OutputBase extends StatsBase, StatsCodec {\n    /** Total number of bytes sent for this SSRC. */\n    totalBytesSent?: number;\n    /** Number of bytes sent for this SSRC since last collection. */\n    bytesSentDelta?: number;\n    /** Total number of packets sent for this SSRC. */\n    totalPacketsSent?: number;\n    /** Number of packets sent for this SSRC since last collection. */\n    packetsSentDelta?: number;\n    /**\n     * Reflects the current encoder target in bits per second.\n     * The target is an instantaneous value reflecting the encoder's settings,\n     * but the resulting payload bytes sent per second, excluding retransmissions,\n     * should closely correlate to the target.\n     */\n    targetBitrate?: number;\n    /** The total number of packets that were retransmitted for this SSRC. */\n    retransmittedPacketsSent?: number;\n    /** Number of packets that were retransmitted for this SSRC since last collection. */\n    retransmittedPacketsSentDelta?: number;\n    /**\n     * The total number of bytes that were retransmitted for this SSRC,\n     * only including payload bytes.\n     */\n    retransmittedBytesSent?: number;\n    /**\n     * Number of bytes that were retransmitted for this SSRC,\n     * only including payload bytes since last collection.\n     */\n    retransmittedBytesSentDelta?: number;\n}\n\n/**\n * Represents the statistics object for an output audio stream.\n */\nexport interface OutputAudio extends OutputBase {}\n\n/**\n * Represents the statistics object for an output video stream.\n */\nexport interface OutputVideo extends OutputBase {\n    /** Represents the width of the last encoded frame. */\n    frameWidth?: number;\n    /** Represents the height of the last encoded frame. */\n    frameHeight?: number;\n    /** The number of encoded frames during the last second. */\n    framesPerSecond?: number;\n    /** Represents the total number of frames sent on this RTP stream. */\n    framesSent?: number;\n    /** The current reason for limiting the resolution and/or framerate, or \"none\" if not limited. */\n    qualityLimitationReason: QualityLimitationReason;\n    /** A record of the total time, in seconds, that this stream has spent in each quality limitation state. */\n    qualityLimitationDurations?: Record<string, number>;\n}\n\n/**\n * Represents the statistics object for an input audio stream.\n */\nexport interface InputAudio extends StatsBase, StatsCodec {\n    /** The value of the MediaStreamTrack's id attribute. */\n    trackIdentifier: string;\n    /** Packet Jitter measured in seconds for this SSRC. */\n    jitter?: number;\n    /**\n     * The purpose of the jitter buffer is to recombine RTP packets into frames (in the case of video) and have smooth playout.\n     * The model described here assumes that the samples or frames are still compressed and have not yet been decoded.\n     * It is the sum of the time, in seconds, each audio sample or a video frame takes from the time the first packet\n     * is received by the jitter buffer (ingest timestamp) to the time it exits the jitter buffer (emit timestamp).\n     */\n    jitterBufferDelay?: number;\n    /** The total number of audio samples or video frames that have come out of the jitter buffer (increasing {@link jitterBufferDelay}). */\n    jitterBufferEmittedCount?: number;\n    /** Total number of bytes received for this SSRC. */\n    totalBytesReceived?: number;\n    /** Total number of packets received for this SSRC. */\n    totalPacketsReceived?: number;\n    /**\n     * Total number of RTP packets lost for this SSRC.\n     * Note that because of how this is estimated, it can be negative if more packets are received than sent.\n     */\n    totalPacketsLost?: number;\n    /** The ratio of packet loss. */\n    packetLossRatio?: number;\n    /** Number of packets lost since last collection. */\n    packetLossDelta?: number;\n}\n\n/**\n * Represents the statistics object for an input video stream.\n */\nexport interface InputVideo extends InputAudio {\n    /**\n     * Represents the total number of key frames, such as key frames in VP8 [RFC6386]\n     * or IDR-frames in H.264 [RFC6184], successfully decoded for this RTP media stream.\n     */\n    keyFramesDecoded?: number;\n    /** Represents the width of the last decoded frame. */\n    frameWidth?: number;\n    /** Represents the height of the last decoded frame. */\n    frameHeight?: number;\n    /** Represents the total number of frames correctly decoded for this RTP stream, i.e., frames that would be displayed if no frames are dropped. */\n    framesDecoded?: number;\n    /** The total number of frames dropped prior to decode or dropped because the frame missed its display deadline for this receiver's track. */\n    framesDropped?: number;\n    /** The number of decoded frames in the last second. */\n    framesPerSecond?: number;\n    /** Represents the total number of complete frames received on this RTP stream. This metric is incremented when the complete frame is received. */\n    framesReceived?: number;\n}\n\n/**\n * Represents the parsed WebRTC statistics collected for an input or output audio & video stream.\n */\nexport interface AudioVideoCollect<TAudio, TVideo> {\n    /** Audio statistics. */\n    audio: TAudio[];\n    /** Video statistics. */\n    video: TVideo[];\n}\n\n/**\n * Represents the parsed WebRTC statistics collected.\n */\nexport interface OnStats {\n    /** Gets the time at which the statistics were collected as a string value in ISO format. */\n    timestamp: string;\n    /** List of audio & video output statistics. */\n    output: AudioVideoCollect<OutputAudio, OutputVideo>;\n    /** List of audio & video input statistics. */\n    input: AudioVideoCollect<InputAudio, InputVideo>;\n    /** Raw statistics, if {@link WebRTCStatsOptions.includeRawStats | includeRawStats} is set to `true` in the collection options. */\n    rawStats?: RTCStatsReport;\n    /**\n     * Represents the sum of all round trip time measurements in seconds since the beginning of the session,\n     * based on STUN connectivity check [STUN-PATH-CHAR] responses (responsesReceived),\n     * including those that reply to requests that are sent in order to verify consent [RFC7675].\n     * The average round trip time can be computed from {@link totalRoundTripTime} by dividing it by {@link responsesReceived}.\n     */\n    totalRoundTripTime?: number;\n    /** Represents the total number of connectivity check responses received. */\n    responsesReceived?: number;\n    /**\n     * Represents the latest round trip time measured in seconds, computed from both STUN connectivity checks [STUN-PATH-CHAR],\n     * including those that are sent for consent verification [RFC7675].\n     */\n    currentRoundTripTime?: number;\n    /**\n     * It is calculated by the underlying congestion control by combining the available\n     * bitrate for all the outgoing RTP streams using this candidate pair.\n     * The bitrate measurement does not count the size of the IP or other transport layers like TCP or UDP.\n     * It is similar to the TIAS defined in [RFC3890], i.e.,\n     * it is measured in bits per second and the bitrate is calculated over a 1 second window.\n     */\n    availableOutgoingBitrate?: number;\n    /**\n     * It is calculated by the underlying congestion control by combining the available\n     * bitrate for all the incoming RTP streams using this candidate pair.\n     * The bitrate measurement does not count the size of the IP or other transport layers like TCP or UDP.\n     * It is similar to the TIAS defined in [RFC3890], i.e.,\n     * it is measured in bits per second and the bitrate is calculated over a 1 second window.\n     */\n    availableIncomingBitrate?: number;\n}\n","import { RTCRtpStreamStats } from './types/lib.dom';\n\nexport const getMediaKind = (rtcStats: RTCRtpStreamStats): string => {\n    let mediaKind = rtcStats.kind || rtcStats.mediaType;\n\n    // Safari is missing mediaType and kind for 'inbound-rtp'\n    if (!['audio', 'video'].includes(mediaKind) && rtcStats.type === 'inbound-rtp') {\n        if (rtcStats.id.toLocaleLowerCase().includes('video')) mediaKind = 'video';\n        else mediaKind = 'audio';\n    }\n\n    return mediaKind;\n};\n\nexport const calculateRate = (timestamp: number, value: number, lastTimestamp?: number, lastValue?: number): number => {\n    if (lastTimestamp && lastValue) {\n        return (value - lastValue) / ((timestamp - lastTimestamp) / 1000);\n    }\n\n    return 0;\n};\n\nexport const calculatePacketsLostRatio = (\n    totalPacketsLost: number,\n    totalPacketsReceived: number,\n    lastTotalPacketsLost?: number,\n    lastTotalPacketsReceived?: number\n): number => {\n    if (totalPacketsReceived == 0) {\n        return 0;\n    }\n\n    const currentLostPackages = totalPacketsLost - (lastTotalPacketsLost ?? 0);\n    const currentReceivedPackages = totalPacketsReceived - (lastTotalPacketsReceived ?? 0);\n    return currentLostPackages / currentReceivedPackages;\n};\n","import { EventEmitter } from 'events';\nimport Logger, { ILogger } from 'js-logger';\n\nimport { RTCStatsReport, RTCStats, RTCOutboundRtpStreamStats, RTCInboundRtpStreamStats } from './types/lib.dom';\nimport { InputAudio, InputVideo, OutputAudio, OutputVideo, OnStats, StatsCodec, OutputBase, QualityLimitationReason } from './types/WebRTCStats';\nimport { WebRTCStatsOptions } from './types/options';\nimport { WebRTCStatsEvents } from './types/webRTCStatsEvents';\nimport { getMediaKind, calculateRate, calculatePacketsLostRatio } from './utils';\n\nexport interface WebRTCStats {\n    /**\n     * Adds the `listener` function to the end of the listeners array for the\n     * event named `eventName`. No checks are made to see if the `listener` has\n     * already been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\n     * times.\n     *\n     * @param eventName The name of the event.\n     * @param listener The callback function.\n     *\n     * @returns A reference to the {@link EventEmitter}, so that calls can be chained.\n     */\n    on<N extends keyof WebRTCStatsEvents>(eventName: N, listener: WebRTCStatsEvents[N]): this;\n\n    /** @hidden */\n    emit<N extends keyof WebRTCStatsEvents>(eventName: N, ...args: Parameters<WebRTCStatsEvents[N]>): boolean;\n}\n\n/**\n * Representation of the WebRTC Statistics collection object.\n *\n * @example\n * ```ts\n * import { WebRTCStats } from '@dolbyio/webrtc-stats';\n *\n * const collection = new WebRTCStats({\n *     getStatsInterval: 1000,\n *     getStats: () => {\n *         // TODO: return the statistics.\n *     },\n *     includeRawStats: false,\n * });\n *\n * // The stats event is triggered after each interval has elapsed\n * collection.on('stats', (event: OnStats) => {\n *     console.log(event);\n * });\n *\n * // Start the statistics collection\n * collection.start();\n * ```\n */\nexport class WebRTCStats extends EventEmitter implements WebRTCStats {\n    #getStats: () => Promise<RTCStatsReport>;\n    #getStatsInterval: number;\n    #includeRawStats: boolean;\n\n    #intervalId: NodeJS.Timer | null = null;\n    #logger: ILogger;\n    #lastOnStats: OnStats | null = null;\n\n    /**\n     * Creates an instance of the {@link WebRTCStats} class.\n     *\n     * @param options Options for the WebRTC statistics collection.\n     */\n    constructor(options: WebRTCStatsOptions) {\n        super();\n\n        this.#logger = Logger.get('WebRTCStats');\n        this.#getStats = options.getStats;\n        this.#getStatsInterval = options.getStatsInterval || 1000;\n        this.#includeRawStats = !!options.includeRawStats;\n    }\n\n    /**\n     * Starts the WebRTC statistics collection.\n     */\n    public start = () => {\n        this.#logger.info('WebRTC statistics collection is starting...');\n        this.#lastOnStats = null;\n\n        this.#intervalId = setInterval(this.#parseStats, this.#getStatsInterval);\n    };\n\n    /**\n     * Stops the WebRTC statistics collection.\n     */\n    public stop = () => {\n        if (this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = null;\n            this.#logger.info('WebRTC statistics collection has stopped.');\n        }\n    };\n\n    #parseStats = async () => {\n        let rtcStatsReport: RTCStatsReport;\n        let timestamp: string;\n        try {\n            this.#logger.trace('Requesting WebRTC statistics...');\n            rtcStatsReport = await this.#getStats();\n            timestamp = new Date().toISOString();\n        } catch (error) {\n            this.#logger.error('Problem collecting the WebRTC statistics.', error);\n            this.emit('error', `Problem collecting the WebRTC statistics - ${error}`);\n\n            return;\n        }\n\n        const statistics: RTCStats[] = Array.from(rtcStatsReport.values());\n\n        const eventPayload: OnStats = {\n            timestamp: timestamp,\n            input: {\n                audio: [],\n                video: [],\n            },\n            output: {\n                audio: [],\n                video: [],\n            },\n        };\n\n        if (this.#includeRawStats) {\n            eventPayload.rawStats = rtcStatsReport;\n        }\n\n        for (let i = 0; i < Object.keys(statistics).length; i++) {\n            const entry: RTCStats = statistics[i];\n\n            switch (entry.type) {\n                case 'outbound-rtp':\n                    const outEntry: RTCOutboundRtpStreamStats = entry as RTCOutboundRtpStreamStats;\n                    const outMediaKind = getMediaKind(outEntry);\n                    if (outMediaKind === 'audio') {\n                        await this.#parseOutboundRtpAudio(rtcStatsReport, outEntry, eventPayload);\n                    } else if (outMediaKind === 'video') {\n                        await this.#parseOutboundRtpVideo(rtcStatsReport, outEntry, eventPayload);\n                    }\n                    break;\n\n                case 'inbound-rtp':\n                    const inEntry: RTCInboundRtpStreamStats = entry as RTCInboundRtpStreamStats;\n                    let inMediaKind = getMediaKind(inEntry);\n                    if (inMediaKind === 'audio') {\n                        await this.#parseInboundRtpAudio(rtcStatsReport, inEntry, eventPayload);\n                    } else if (inMediaKind === 'video') {\n                        await this.#parseInboundRtpVideo(rtcStatsReport, inEntry, eventPayload);\n                    }\n                    break;\n\n                case 'candidate-pair':\n                    const cpEntry: RTCIceCandidatePairStats = entry as RTCIceCandidatePairStats;\n                    if (cpEntry.nominated) {\n                        this.#parseCandidatePair(cpEntry, eventPayload);\n                    }\n                    break;\n\n                default:\n                    // \"candidate-pair\" | \"certificate\" | \"codec\" | \"data-channel\" | \"local-candidate\"\n                    // | \"media-source\" | \"peer-connection\" | \"remote-candidate\" | \"remote-inbound-rtp\"\n                    // | \"remote-outbound-rtp\" | \"track\" | \"transport\";\n                    break;\n            }\n        }\n\n        this.#lastOnStats = eventPayload;\n        this.emit('stats', eventPayload);\n    };\n\n    #getCodec(rtcStatsReport: RTCStatsReport, codecId?: string): StatsCodec {\n        if (codecId) {\n            const codec: RTCRtpCodecParameters = rtcStatsReport.get(codecId) as RTCRtpCodecParameters;\n            if (codec) {\n                return {\n                    mimeType: codec.mimeType,\n                };\n            }\n        }\n\n        return {};\n    }\n\n    async #getOutputBase(rtcStatsReport: RTCStatsReport, entry: RTCOutboundRtpStreamStats, last: OutputAudio): Promise<OutputBase> {\n        const bitrate = calculateRate(entry.timestamp, entry.bytesSent, last?.timestamp, last?.totalBytesSent);\n        const packetRate = calculateRate(entry.timestamp, entry.packetsSent, last?.timestamp, last?.totalPacketsSent);\n        const codec = this.#getCodec(rtcStatsReport, entry.codecId);\n\n        const outputBase: OutputBase = {\n            id: entry.id,\n            timestamp: entry.timestamp,\n            mid: entry.mid,\n            totalBytesSent: entry.bytesSent,\n            bytesSentDelta: entry.bytesSent - (last?.totalBytesSent ?? 0),\n            totalPacketsSent: entry.packetsSent,\n            packetsSentDelta: entry.packetsSent - (last?.totalPacketsSent ?? 0),\n            bitrate: bitrate,\n            packetRate: packetRate,\n            targetBitrate: entry.targetBitrate,\n            retransmittedPacketsSent: entry.retransmittedPacketsSent,\n            retransmittedPacketsSentDelta: entry.retransmittedPacketsSent - (last?.retransmittedPacketsSent ?? 0),\n            retransmittedBytesSent: entry.retransmittedBytesSent,\n            retransmittedBytesSentDelta: entry.retransmittedBytesSent - (last?.retransmittedBytesSent ?? 0),\n            ...codec,\n        };\n\n        return outputBase;\n    }\n\n    async #parseOutboundRtpAudio(rtcStatsReport: RTCStatsReport, entry: RTCOutboundRtpStreamStats, eventPayload: OnStats) {\n        const last: OutputAudio = this.#lastOnStats?.output.audio.find((a) => a.id === entry.id);\n        if (last && entry.timestamp - last.timestamp <= 0) return;\n\n        const outputBase: OutputBase = await this.#getOutputBase(rtcStatsReport, entry, last);\n\n        const outputAudio: OutputAudio = {\n            ...outputBase,\n        };\n\n        eventPayload.output.audio.push(outputAudio);\n    }\n\n    async #parseOutboundRtpVideo(rtcStatsReport: RTCStatsReport, entry: RTCOutboundRtpStreamStats, eventPayload: OnStats) {\n        const last: OutputVideo = this.#lastOnStats?.output.video.find((a) => a.id === entry.id);\n        if (last && entry.timestamp - last.timestamp <= 0) return;\n\n        const outputBase: OutputBase = await this.#getOutputBase(rtcStatsReport, entry, last);\n\n        let qualityLimitationReason: QualityLimitationReason = QualityLimitationReason.none;\n        if (entry.qualityLimitationReason) {\n            qualityLimitationReason = entry.qualityLimitationReason as unknown as QualityLimitationReason;\n        }\n\n        const outputVideo: OutputVideo = {\n            ...outputBase,\n            frameWidth: entry.frameWidth,\n            frameHeight: entry.frameHeight,\n            framesPerSecond: entry.framesPerSecond,\n            framesSent: entry.framesSent,\n            qualityLimitationReason: qualityLimitationReason,\n            qualityLimitationDurations: entry.qualityLimitationDurations,\n        };\n\n        eventPayload.output.video.push(outputVideo);\n    }\n\n    async #getInputAudio(rtcStatsReport: RTCStatsReport, entry: RTCInboundRtpStreamStats, last: InputAudio): Promise<InputAudio> {\n        const bitrate = calculateRate(entry.timestamp, entry.bytesReceived, last?.timestamp, last?.totalBytesReceived);\n        const packetRate = calculateRate(entry.timestamp, entry.packetsReceived, last?.timestamp, last?.totalPacketsReceived);\n        const packetLossRatio = calculatePacketsLostRatio(entry.packetsReceived, entry.packetsLost, last?.totalPacketsReceived, last?.totalPacketsLost);\n        const packetLossDelta = (entry.packetsLost ?? 0) - (last?.totalPacketsLost ?? 0);\n        const codec = this.#getCodec(rtcStatsReport, entry.codecId);\n\n        const inputAudio: InputAudio = {\n            id: entry.id,\n            timestamp: entry.timestamp,\n            mid: entry.mid,\n            trackIdentifier: entry.trackIdentifier,\n            jitter: entry.jitter,\n            jitterBufferDelay: entry.jitterBufferDelay,\n            jitterBufferEmittedCount: entry.jitterBufferEmittedCount,\n            totalBytesReceived: entry.bytesReceived,\n            totalPacketsReceived: entry.packetsReceived,\n            totalPacketsLost: entry.packetsLost,\n            bitrate: bitrate,\n            packetRate: packetRate,\n            packetLossRatio: packetLossRatio,\n            packetLossDelta: packetLossDelta,\n            ...codec,\n        };\n        return inputAudio;\n    }\n\n    async #parseInboundRtpAudio(rtcStatsReport: RTCStatsReport, entry: RTCInboundRtpStreamStats, eventPayload: OnStats) {\n        const last: InputAudio = this.#lastOnStats?.input.audio.find((a) => a.id === entry.id);\n        if (last && entry.timestamp - last.timestamp <= 0) return;\n\n        const inputAudio: InputAudio = await this.#getInputAudio(rtcStatsReport, entry, last);\n\n        eventPayload.input.audio.push(inputAudio);\n    }\n\n    async #parseInboundRtpVideo(rtcStatsReport: RTCStatsReport, entry: RTCInboundRtpStreamStats, eventPayload: OnStats) {\n        const last: InputVideo = this.#lastOnStats?.input.video.find((a) => a.id === entry.id);\n        if (last && entry.timestamp - last.timestamp <= 0) return;\n\n        const inputAudio: InputAudio = await this.#getInputAudio(rtcStatsReport, entry, last);\n\n        const inputVideo: InputVideo = {\n            ...inputAudio,\n            keyFramesDecoded: entry.keyFramesDecoded,\n            frameHeight: entry.frameHeight,\n            frameWidth: entry.frameWidth,\n            framesDecoded: entry.framesDecoded,\n            framesDropped: entry.framesDropped,\n            framesPerSecond: entry.framesPerSecond,\n            framesReceived: entry.framesReceived,\n        };\n\n        eventPayload.input.video.push(inputVideo);\n    }\n\n    #parseCandidatePair(entry: RTCIceCandidatePairStats, eventPayload: OnStats) {\n        eventPayload.totalRoundTripTime = entry.totalRoundTripTime;\n        eventPayload.currentRoundTripTime = entry.currentRoundTripTime;\n        eventPayload.responsesReceived = entry.responsesReceived;\n        eventPayload.availableOutgoingBitrate = entry.availableOutgoingBitrate;\n        eventPayload.availableIncomingBitrate = entry.availableIncomingBitrate;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(156);\n"],"names":["root","factory","exports","module","define","amd","self","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","global","logHandler","Logger","contextualLoggersByNameMap","scope","func","merge","hasOwnProperty","defineLogLevel","TRACE","DEBUG","INFO","TIME","WARN","ERROR","OFF","ContextualLogger","defaultContext","setLevel","filterLevel","log","info","newLevel","getLevel","enabledFor","lvl","trace","invoke","debug","time","label","timeEnd","level","msgArgs","L","globalLogger","setHandler","createDefaultHandler","options","formatter","messages","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","timerLabel","Date","getTime","useDefaults","defaultLevel","setDefaults","default","QualityLimitationReason","getMediaKind","rtcStats","mediaKind","kind","mediaType","includes","id","toLocaleLowerCase","calculateRate","timestamp","lastTimestamp","lastValue","calculatePacketsLostRatio","totalPacketsLost","totalPacketsReceived","lastTotalPacketsLost","lastTotalPacketsReceived","WebRTCStats","constructor","super","start","setInterval","stop","clearInterval","rtcStatsReport","toISOString","statistics","from","values","eventPayload","input","audio","video","output","rawStats","entry","outEntry","outMediaKind","inEntry","inMediaKind","cpEntry","nominated","getStats","getStatsInterval","includeRawStats","codecId","codec","mimeType","last","bitrate","bytesSent","totalBytesSent","packetRate","packetsSent","totalPacketsSent","mid","bytesSentDelta","packetsSentDelta","targetBitrate","retransmittedPacketsSent","retransmittedPacketsSentDelta","retransmittedBytesSent","retransmittedBytesSentDelta","find","a","outputBase","outputAudio","qualityLimitationReason","none","outputVideo","frameWidth","frameHeight","framesPerSecond","framesSent","qualityLimitationDurations","bytesReceived","totalBytesReceived","packetsReceived","packetLossRatio","packetsLost","packetLossDelta","trackIdentifier","jitter","jitterBufferDelay","jitterBufferEmittedCount","inputAudio","inputVideo","keyFramesDecoded","framesDecoded","framesDropped","framesReceived","totalRoundTripTime","currentRoundTripTime","responsesReceived","availableOutgoingBitrate","availableIncomingBitrate","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}